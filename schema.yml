info:
  description: ''
  title: ''
  version: ''
openapi: 3.0.0
paths:
  /member/:
    get:
      description: Returns the list of all members
      operationId: member_list
      parameters:
      - in: query
        name: page
        schema:
          description: A page number within the paginated result set.
          title: Page
          type: integer
      tags:
      - member
  /member/create_record/:
    post:
      description: Creates a member from json
      operationId: member_create_record
      tags:
      - member
  /member/{id}/:
    get:
      description: Returns the record associated with the primary key md5(teamid) + md5(user email)
      operationId: member_read
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique value identifying this member.
          title: id
          type: string
      tags:
      - member
    patch:
      description: Updates the record associated with the primary key with the included json
      operationId: member_partial_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique value identifying this member.
          title: id
          type: string
      tags:
      - member
    put:
      description: Replaces the record associated with the primary key with the included json
      operationId: member_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique value identifying this member.
          title: id
          type: string
      tags:
      - member
  /member/{id}/approve/:
    patch:
      description: Approve the join request (activate a record associated with id)
      operationId: member_approve
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique value identifying this member.
          title: id
          type: string
      tags:
      - member
  /member/{id}/leave/:
    patch:
      description: leave this team. this is deletion but only to deactivate the record
      operationId: member_leave
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique value identifying this member.
          title: id
          type: string
      tags:
      - member
  /member/{id}/make_admin/:
    patch:
      description: make the user an admin
      operationId: member_make_admin
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique value identifying this member.
          title: id
          type: string
      tags:
      - member
  /status/create_record/:
    post:
      description: insert a ticket status from the json
      operationId: status_create_record
      tags:
      - status
  /status/{id}/:
    delete:
      description: delete a ticket status associated with id
      operationId: status_delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket status.
          title: ID
          type: integer
      tags:
      - status
    get:
      description: read the status associated with a given id
      operationId: status_read
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket status.
          title: ID
          type: integer
      tags:
      - status
    patch:
      description: perform a partial update
      operationId: status_partial_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket status.
          title: ID
          type: integer
      tags:
      - status
    put:
      description: replace the status associated with an id
      operationId: status_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket status.
          title: ID
          type: integer
      tags:
      - status
  /status/{id}/list_team/:
    get:
      description: list the statuses associated with a team id
      operationId: status_list_team
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket status.
          title: ID
          type: integer
      tags:
      - status
  /tag/create_record/:
    post:
      descriptipon: create a record from the json input
      operationId: tag_create_record
      tags:
      - tag
  /tag/{id}/:
    delete:
      description: delete the tag associated with the id
      operationId: tag_delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this tag.
          title: ID
          type: integer
      tags:
      - tag
    get:
      description: retrieve the tag record
      operationId: tag_read
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this tag.
          title: ID
          type: integer
      tags:
      - tag
    patch:
      description: update only a portion of the tag
      operationId: tag_partial_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this tag.
          title: ID
          type: integer
      tags:
      - tag
    put:
      description: replace the entire tag
      operationId: tag_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this tag.
          title: ID
          type: integer
      tags:
      - tag
  /tag/{id}/list_team/:
    get:
      description: list the tags associated with the team at id
      operationId: tag_list_team
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this tag.
          title: ID
          type: integer
      tags:
      - tag
  /team/:
    get:
      description: retrieve all teams
      operationId: team_list
      parameters:
      - in: query
        name: page
        schema:
          description: A page number within the paginated result set.
          title: Page
          type: integer
      tags:
      - team
  /team/create_record/:
    post:
      description: create a team from json. the creating user becomes an admin of this team
      operationId: team_create_record
      tags:
      - team
  /team/{id}/:
    delete:
      description: delete the team associated with the id
      operationId: team_delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this team.
          title: ID
          type: integer
      tags:
      - team
    get:
      description: retrieve the full record from the associated id
      operationId: team_read
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this team.
          title: ID
          type: integer
      tags:
      - team
    patch:
      description: update a portion of the fields
      operationId: team_partial_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this team.
          title: ID
          type: integer
      tags:
      - team
    put:
      description: replace all the fields
      operationId: team_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this team.
          title: ID
          type: integer
      tags:
      - team
  /ticket-comment/:
    get:
      description: not supported atm
      operationId: ticket-comment_list
      parameters:
      - in: query
        name: page
        schema:
          description: A page number within the paginated result set.
          title: Page
          type: integer
      tags:
      - ticket-comment
    post:
      description: not supported atm
      operationId: ticket-comment_create
      tags:
      - ticket-comment
  /ticket-comment/recent_comments/:
    get:
      description: not supported atm
      operationId: ticket-comment_recent_comments
      tags:
      - ticket-comment
  /ticket-comment/{id}/:
    delete:
      description: not supported atm
      operationId: ticket-comment_delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket comment.
          title: ID
          type: integer
      tags:
      - ticket-comment
    get:
      description: not supported atm
      operationId: ticket-comment_read
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket comment.
          title: ID
          type: integer
      tags:
      - ticket-comment
    patch:
      description: not supported atm
      operationId: ticket-comment_partial_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket comment.
          title: ID
          type: integer
      tags:
      - ticket-comment
    put:
      description: not supported atm
      operationId: ticket-comment_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket comment.
          title: ID
          type: integer
      tags:
      - ticket-comment
  /ticket/create_record/:
    post:
      description: Creates a record from json
      operationId: ticket_create_record
      tags:
      - ticket
  /ticket/{id}/:
    get:
      description: Returns the serialized ticket associated with id
      operationId: ticket_read
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket.
          title: ID
          type: integer
      - in: query
        name: search
        schema:
          description: A search term.
          title: Search
          type: string
      - in: query
        name: ordering
        schema:
          description: Which field to use when ordering the results.
          title: Ordering
          type: string
      tags:
      - ticket
    patch:
      description: Update only some of the fields associated with id
      operationId: ticket_partial_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket.
          title: ID
          type: integer
      - in: query
        name: search
        schema:
          description: A search term.
          title: Search
          type: string
      - in: query
        name: ordering
        schema:
          description: Which field to use when ordering the results.
          title: Ordering
          type: string
      tags:
      - ticket
    put:
      description: Completely replace a ticket
      operationId: ticket_update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket.
          title: ID
          type: integer
      - in: query
        name: search
        schema:
          description: A search term.
          title: Search
          type: string
      - in: query
        name: ordering
        schema:
          description: Which field to use when ordering the results.
          title: Ordering
          type: string
      tags:
      - ticket
  /ticket/{id}/add_subticket/:
    patch:
      description: add the ticket associated id as a subticket of the one passed in as json
      operationId: ticket_add_subticket
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket.
          title: ID
          type: integer
      tags:
      - ticket
  /ticket/{id}/delete/:
    delete:
      description: deactivate the ticket associated with the primary key
        the record
      operationId: ticket_delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket.
          title: ID
          type: integer
      tags:
      - ticket
  /ticket/{id}/list_team/:
    get:
      description: List all tickets associated with a team
      operationId: ticket_list_team
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket.
          title: ID
          type: integer
      tags:
      - ticket
  /ticket/{id}/update_status/:
    patch:
      description: Update the status of a ticket associated with id with the status passe din as input
      operationId: ticket_update_status
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: A unique integer value identifying this ticket.
          title: ID
          type: integer
      tags:
      - ticket
servers:
- url: ''
