# Generated by Django 4.0.6 on 2023-03-11 18:53

import api.models.fields.color_field
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "object_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("AP", "Approved"), ("AD", "Admin")],
                        default="AP",
                        max_length=2,
                    ),
                ),
                ("pronouns", models.CharField(blank=True, max_length=256, null=True)),
                ("bio", models.TextField(blank=True, default="")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("activated", models.DateTimeField(blank=True, null=True)),
                ("deactivated", models.DateTimeField(blank=True, null=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
            },
        ),
        migrations.CreateModel(
            name="PinnedTicket",
            fields=[
                (
                    "object_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        max_length=256, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("pinned", models.DateTimeField(auto_now_add=True)),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.member"
                    ),
                ),
            ],
            options={
                "ordering": ["pinned"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
                (
                    "team_title_hash",
                    models.CharField(editable=False, max_length=256, unique=True),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=100,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[\\w-]+$"),
                                "Tag names must be word characters and dashes",
                                "invalid",
                            )
                        ],
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("activated", models.DateTimeField(blank=True, null=True)),
                ("deactivated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("ticket_head", models.IntegerField(default=0, editable=False)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("activated", models.DateTimeField(blank=True, null=True)),
                ("deactivated", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["created"],
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
                ("ticket_number", models.IntegerField()),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("activated", models.DateTimeField(auto_now_add=True)),
                ("deactivated", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_ticket",
                        to="api.member",
                    ),
                ),
                (
                    "members_pins",
                    models.ManyToManyField(through="api.PinnedTicket", to="api.member"),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="TicketTag",
            fields=[
                (
                    "object_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=256,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("activated", models.DateTimeField(blank=True, null=True)),
                ("deactivated", models.DateTimeField(blank=True, null=True)),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.tag"
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_tag",
                        to="api.team",
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.ticket"
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
                "unique_together": {("tag", "ticket")},
            },
        ),
        migrations.CreateModel(
            name="TicketStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                (
                    "color",
                    api.models.fields.color_field.ColorField(
                        blank=True, default="#B9B9BDFF", max_length=9
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("activated", models.DateTimeField(blank=True, null=True)),
                ("deactivated", models.DateTimeField(blank=True, null=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_status",
                        to="api.team",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "unique_together": {("title", "team")},
            },
        ),
        migrations.CreateModel(
            name="TicketNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(max_length=255, unique=True)),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                (
                    "ticket",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_node",
                        to="api.ticket",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TicketComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
                ("content", models.TextField()),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("activated", models.DateTimeField(blank=True, null=True)),
                ("deactivated", models.DateTimeField(blank=True, null=True)),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_comment",
                        to="api.team",
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.ticket"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="ticket",
            name="status",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="status_ticket",
                to="api.ticketstatus",
            ),
        ),
        migrations.AddField(
            model_name="ticket",
            name="tag_list",
            field=models.ManyToManyField(through="api.TicketTag", to="api.tag"),
        ),
        migrations.AddField(
            model_name="ticket",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ticket",
                to="api.team",
            ),
        ),
        migrations.AddField(
            model_name="tag",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tag",
                to="api.team",
            ),
        ),
        migrations.AddField(
            model_name="pinnedticket",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pinned_ticket",
                to="api.team",
            ),
        ),
        migrations.AddField(
            model_name="pinnedticket",
            name="ticket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.ticket"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="member",
                to="api.team",
            ),
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "event_type",
                    models.SmallIntegerField(
                        choices=[(1, "Create"), (2, "Update"), (3, "Delete")]
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("object", models.UUIDField()),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event",
                        to="api.team",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="TeamInvite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, null=True, unique=True
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invite",
                        to="api.team",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "unique_together": {("user", "team")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="tag",
            unique_together={("title", "team")},
        ),
        migrations.AlterUniqueTogether(
            name="pinnedticket",
            unique_together={("ticket", "member")},
        ),
        migrations.AlterUniqueTogether(
            name="member",
            unique_together={("owner", "team")},
        ),
    ]
